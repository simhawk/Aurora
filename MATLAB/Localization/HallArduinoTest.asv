clear all;
clc;

a = arduino('com5', 'uno');

gaussLeft = readVoltage(a,'A0');
gaussTop = readVoltage(a,'A1');
gaussRight = readVoltage(a,'A2');


%quartic approximation coefficients
c = 1.0e+03 *[ 0.2954 -3.5652 9.7244 -8.6980 2.6161];

%1, 2, 3 represent left, right, then top respectively
B = [gaussLeft; gaussRight; gaussTop];

x0 = 13/16;

fun1 = @(x)c(1)*x^4+c(2)*x^3+c(3)*x^2+c(4)*x+c(5) - B(1);
fun2 = @(x)c(1)*x^4+c(2)*x^3+c(3)*x^2+c(4)*x+c(5) - B(2);
fun3 = @(x)c(1)*x^4+c(2)*x^3+c(3)*x^2+c(4)*x+c(5) - B(3);

R1 = fsolve(fun1, x0);
R2 = fsolve(fun2, x0);
R3 = fsolve(fun3, x0);

left = [0, 0];
right = [34,0].*.254;
top = [17, sqrt(34^2-17^2)].*.254;

p_guess = [13/16, 13/16];
f = @(p) (sqrt((p(1)-left(1)).^2+(p(2)-left(2)).^2)-R1).^2   +   (sqrt((p(1)-right(1)).^2+(p(2)-right(2)).^2)-R2).^2   +   (sqrt((p(1)-top(1)).^2+(p(2)-top(2)).^2)-R3).^2;
p_min = fminsearch(f,p_guess);

plotTitle = 'Arduino Data Log';  % plot title
xLabel = 'Elapsed Time (s)';     % x-axis label
yLabel = 'Analog (G)';      % y-axis label
legend1 = 'Temperature Sensor 1'
legend2 = 'Temperature Sensor 2'
legend3 = 'Temperature Sensor 3'
yMax  = 800                           %y Maximum Value
yMin  = 0                       %y minimum Value
plotGrid = 'on';                 % 'off' to turn off grid
min = 0;                         % set x-min
max = 40;                        % set x-max
delay = .01;                     % make sure sample faster than resolution 
%Define Function Variables
time = 0;
data = 0;
data1 = 0;
data2 = 0;
count = 0;
%Set up Plot
plotGraph = plot(time,data,'-r' )  % every AnalogRead needs to be on its own Plotgraph
hold on                            %hold on makes sure all of the channels are plotted
plotGraph1 = plot(time,data1,'-b')
plotGraph2 = plot(time, data2,'-g' )
title(plotTitle,'FontSize',15);
xlabel(xLabel,'FontSize',15);
ylabel(yLabel,'FontSize',15);
legend(legend1,legend2,legend3)
axis([yMin yMax min max]);
grid(plotGrid);
tic
while ishandle(plotGraph) %Loop when Plot is Active will run until plot is closed
         dat = readVoltage(a,'A0')/.97*400; %Data from the arduino
         dat1 = readVoltage(a,'A1')/.97; 
         dat2 = readVoltage(a,'A2')* 0.48875855327;       
         count = count + 1;    
         time(count) = toc;    
         data(count) = dat(1);         
         data1(count) = dat1(1)
         data2(count) = dat2(1)
         %This is the magic code 
         %Using plot will slow down the sampling time.. At times to over 20
         %seconds per sample!
         set(plotGraph,'XData',time,'YData',data);
         set(plotGraph1,'XData',time,'YData',data1);
         set(plotGraph2,'XData',time,'YData',data2);
          axis([0 time(count) min max]);
          %Update the graph
          pause(delay);
  end



